{"id":"node_modules/@babylonjs/core/Shaders/ShadersInclude/bumpFragmentFunctions.js","dependencies":[{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bumpFragmentFunctions.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\package.json","includedInParent":true,"mtime":1619046869845},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\.babelrc","includedInParent":true,"mtime":1618361427593},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../../Materials/effect","loc":{"line":1,"column":23},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bumpFragmentFunctions.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Materials\\effect.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bumpFragmentFunctions = void 0;\n\nvar _effect = require(\"../../Materials/effect\");\n\nvar name = 'bumpFragmentFunctions';\nvar shader = \"#if defined(BUMP)\\n#if BUMPDIRECTUV == 1\\n#define vBumpUV vMainUV1\\n#elif BUMPDIRECTUV == 2\\n#define vBumpUV vMainUV2\\n#else\\nvarying vec2 vBumpUV;\\n#endif\\nuniform sampler2D bumpSampler;\\nvec3 perturbNormal(mat3 cotangentFrame,vec2 uv)\\n{\\nreturn perturbNormal(cotangentFrame,texture2D(bumpSampler,uv).xyz,vBumpInfos.y);\\n}\\n#endif\\n#if defined(DETAIL)\\n#if DETAILDIRECTUV == 1\\n#define vDetailUV vMainUV1\\n#elif DETAILDIRECTUV == 2\\n#define vDetailUV vMainUV2\\n#else\\nvarying vec2 vDetailUV;\\n#endif\\nuniform sampler2D detailSampler;\\n#endif\\n#if defined(BUMP)\\nvec3 perturbNormal(mat3 cotangentFrame,vec3 color)\\n{\\nreturn perturbNormal(cotangentFrame,color,vBumpInfos.y);\\n}\\n\\nmat3 cotangent_frame(vec3 normal,vec3 p,vec2 uv)\\n{\\nreturn cotangent_frame(normal,p,uv,vTangentSpaceParams);\\n}\\n#endif\\n#if defined(BUMP) && defined(PARALLAX)\\nconst float minSamples=4.;\\nconst float maxSamples=15.;\\nconst int iMaxSamples=15;\\n\\nvec2 parallaxOcclusion(vec3 vViewDirCoT,vec3 vNormalCoT,vec2 texCoord,float parallaxScale) {\\nfloat parallaxLimit=length(vViewDirCoT.xy)/vViewDirCoT.z;\\nparallaxLimit*=parallaxScale;\\nvec2 vOffsetDir=normalize(vViewDirCoT.xy);\\nvec2 vMaxOffset=vOffsetDir*parallaxLimit;\\nfloat numSamples=maxSamples+(dot(vViewDirCoT,vNormalCoT)*(minSamples-maxSamples));\\nfloat stepSize=1.0/numSamples;\\n\\nfloat currRayHeight=1.0;\\nvec2 vCurrOffset=vec2(0,0);\\nvec2 vLastOffset=vec2(0,0);\\nfloat lastSampledHeight=1.0;\\nfloat currSampledHeight=1.0;\\nfor (int i=0; i<iMaxSamples; i++)\\n{\\ncurrSampledHeight=texture2D(bumpSampler,vBumpUV+vCurrOffset).w;\\n\\nif (currSampledHeight>currRayHeight)\\n{\\nfloat delta1=currSampledHeight-currRayHeight;\\nfloat delta2=(currRayHeight+stepSize)-lastSampledHeight;\\nfloat ratio=delta1/(delta1+delta2);\\nvCurrOffset=(ratio)* vLastOffset+(1.0-ratio)*vCurrOffset;\\n\\nbreak;\\n}\\nelse\\n{\\ncurrRayHeight-=stepSize;\\nvLastOffset=vCurrOffset;\\nvCurrOffset+=stepSize*vMaxOffset;\\nlastSampledHeight=currSampledHeight;\\n}\\n}\\nreturn vCurrOffset;\\n}\\nvec2 parallaxOffset(vec3 viewDir,float heightScale)\\n{\\n\\nfloat height=texture2D(bumpSampler,vBumpUV).w;\\nvec2 texCoordOffset=heightScale*viewDir.xy*height;\\nreturn -texCoordOffset;\\n}\\n#endif\";\n_effect.Effect.IncludesShadersStore[name] = shader;\n/** @hidden */\n\nvar bumpFragmentFunctions = {\n  name: name,\n  shader: shader\n};\nexports.bumpFragmentFunctions = bumpFragmentFunctions;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":10,"column":4}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":3,"column":8},"generated":{"line":10,"column":8}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":10,"column":11}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":34}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":11,"column":4}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":11,"column":10}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":11,"column":13}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":2194}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":89,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":89,"column":7},"generated":{"line":12,"column":15}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":89,"column":0},"generated":{"line":12,"column":35}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":89,"column":28},"generated":{"line":12,"column":36}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":89,"column":0},"generated":{"line":12,"column":40}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":89,"column":36},"generated":{"line":12,"column":44}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":89,"column":0},"generated":{"line":12,"column":50}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":7},"generated":{"line":15,"column":0}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":11},"generated":{"line":15,"column":4}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":32},"generated":{"line":15,"column":25}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":35},"generated":{"line":15,"column":28}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":37},"generated":{"line":16,"column":0}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":37},"generated":{"line":16,"column":2}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":41},"generated":{"line":16,"column":6}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":41},"generated":{"line":16,"column":8}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":35},"generated":{"line":16,"column":12}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":43},"generated":{"line":17,"column":0}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":43},"generated":{"line":17,"column":2}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":49},"generated":{"line":17,"column":8}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":49},"generated":{"line":17,"column":10}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":35},"generated":{"line":18,"column":0}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts","name":null,"original":{"line":91,"column":7},"generated":{"line":18,"column":1}}],"sources":{"../../../../sourceES6/core/Shaders/ShadersInclude/bumpFragmentFunctions.ts":"import { Effect } from \"../../Materials/effect\";\n\nlet name = 'bumpFragmentFunctions';\nlet shader = `#if defined(BUMP)\n#if BUMPDIRECTUV == 1\n#define vBumpUV vMainUV1\n#elif BUMPDIRECTUV == 2\n#define vBumpUV vMainUV2\n#else\nvarying vec2 vBumpUV;\n#endif\nuniform sampler2D bumpSampler;\nvec3 perturbNormal(mat3 cotangentFrame,vec2 uv)\n{\nreturn perturbNormal(cotangentFrame,texture2D(bumpSampler,uv).xyz,vBumpInfos.y);\n}\n#endif\n#if defined(DETAIL)\n#if DETAILDIRECTUV == 1\n#define vDetailUV vMainUV1\n#elif DETAILDIRECTUV == 2\n#define vDetailUV vMainUV2\n#else\nvarying vec2 vDetailUV;\n#endif\nuniform sampler2D detailSampler;\n#endif\n#if defined(BUMP)\nvec3 perturbNormal(mat3 cotangentFrame,vec3 color)\n{\nreturn perturbNormal(cotangentFrame,color,vBumpInfos.y);\n}\n\nmat3 cotangent_frame(vec3 normal,vec3 p,vec2 uv)\n{\nreturn cotangent_frame(normal,p,uv,vTangentSpaceParams);\n}\n#endif\n#if defined(BUMP) && defined(PARALLAX)\nconst float minSamples=4.;\nconst float maxSamples=15.;\nconst int iMaxSamples=15;\n\nvec2 parallaxOcclusion(vec3 vViewDirCoT,vec3 vNormalCoT,vec2 texCoord,float parallaxScale) {\nfloat parallaxLimit=length(vViewDirCoT.xy)/vViewDirCoT.z;\nparallaxLimit*=parallaxScale;\nvec2 vOffsetDir=normalize(vViewDirCoT.xy);\nvec2 vMaxOffset=vOffsetDir*parallaxLimit;\nfloat numSamples=maxSamples+(dot(vViewDirCoT,vNormalCoT)*(minSamples-maxSamples));\nfloat stepSize=1.0/numSamples;\n\nfloat currRayHeight=1.0;\nvec2 vCurrOffset=vec2(0,0);\nvec2 vLastOffset=vec2(0,0);\nfloat lastSampledHeight=1.0;\nfloat currSampledHeight=1.0;\nfor (int i=0; i<iMaxSamples; i++)\n{\ncurrSampledHeight=texture2D(bumpSampler,vBumpUV+vCurrOffset).w;\n\nif (currSampledHeight>currRayHeight)\n{\nfloat delta1=currSampledHeight-currRayHeight;\nfloat delta2=(currRayHeight+stepSize)-lastSampledHeight;\nfloat ratio=delta1/(delta1+delta2);\nvCurrOffset=(ratio)* vLastOffset+(1.0-ratio)*vCurrOffset;\n\nbreak;\n}\nelse\n{\ncurrRayHeight-=stepSize;\nvLastOffset=vCurrOffset;\nvCurrOffset+=stepSize*vMaxOffset;\nlastSampledHeight=currSampledHeight;\n}\n}\nreturn vCurrOffset;\n}\nvec2 parallaxOffset(vec3 viewDir,float heightScale)\n{\n\nfloat height=texture2D(bumpSampler,vBumpUV).w;\nvec2 texCoordOffset=heightScale*viewDir.xy*height;\nreturn -texCoordOffset;\n}\n#endif`;\n\nEffect.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport var bumpFragmentFunctions = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"b83279f99036384581985b7d499f7309","cacheData":{"env":{}}}