{"id":"node_modules/@babylonjs/core/Shaders/geometry.fragment.js","dependencies":[{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\geometry.fragment.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\package.json","includedInParent":true,"mtime":1618615549721},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\.babelrc","includedInParent":true,"mtime":1618361427593},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../Materials/effect","loc":{"line":1,"column":23},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\geometry.fragment.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Materials\\effect.js"},{"name":"./ShadersInclude/mrtFragmentDeclaration","loc":{"line":2,"column":7},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\geometry.fragment.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\mrtFragmentDeclaration.js"},{"name":"./ShadersInclude/bumpFragmentMainFunctions","loc":{"line":3,"column":7},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\geometry.fragment.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bumpFragmentMainFunctions.js"},{"name":"./ShadersInclude/bumpFragmentFunctions","loc":{"line":4,"column":7},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\geometry.fragment.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bumpFragmentFunctions.js"},{"name":"./ShadersInclude/bumpFragment","loc":{"line":5,"column":7},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\geometry.fragment.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bumpFragment.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.geometryPixelShader = void 0;\n\nvar _effect = require(\"../Materials/effect\");\n\nrequire(\"./ShadersInclude/mrtFragmentDeclaration\");\n\nrequire(\"./ShadersInclude/bumpFragmentMainFunctions\");\n\nrequire(\"./ShadersInclude/bumpFragmentFunctions\");\n\nrequire(\"./ShadersInclude/bumpFragment\");\n\nvar name = 'geometryPixelShader';\nvar shader = \"#extension GL_EXT_draw_buffers : require\\n#if defined(BUMP) || !defined(NORMAL)\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\nprecision highp float;\\nprecision highp int;\\n#ifdef BUMP\\nvarying mat4 vWorldView;\\nvarying vec3 vNormalW;\\n#else\\nvarying vec3 vNormalV;\\n#endif\\nvarying vec4 vViewPos;\\n#if defined(POSITION) || defined(BUMP)\\nvarying vec3 vPositionW;\\n#endif\\n#ifdef VELOCITY\\nvarying vec4 vCurrentPosition;\\nvarying vec4 vPreviousPosition;\\n#endif\\n#ifdef NEED_UV\\nvarying vec2 vUV;\\n#endif\\n#ifdef BUMP\\nuniform vec3 vBumpInfos;\\nuniform vec2 vTangentSpaceParams;\\n#endif\\n#ifdef REFLECTIVITY\\nvarying vec2 vReflectivityUV;\\nuniform sampler2D reflectivitySampler;\\n#endif\\n#ifdef ALPHATEST\\nuniform sampler2D diffuseSampler;\\n#endif\\n#include<mrtFragmentDeclaration>[RENDER_TARGET_COUNT]\\n#include<bumpFragmentMainFunctions>\\n#include<bumpFragmentFunctions>\\nvoid main() {\\n#ifdef ALPHATEST\\nif (texture2D(diffuseSampler,vUV).a<0.4)\\ndiscard;\\n#endif\\nvec3 normalOutput;\\n#ifdef BUMP\\nvec3 normalW=normalize(vNormalW);\\n#include<bumpFragment>\\nnormalOutput=normalize(vec3(vWorldView*vec4(normalW,0.0)));\\n#else\\nnormalOutput=normalize(vNormalV);\\n#endif\\n#ifdef PREPASS\\n#ifdef PREPASS_DEPTHNORMAL\\ngl_FragData[DEPTHNORMAL_INDEX]=vec4(vViewPos.z/vViewPos.w,normalOutput);\\n#endif\\n#else\\ngl_FragData[0]=vec4(vViewPos.z/vViewPos.w,0.0,0.0,1.0);\\ngl_FragData[1]=vec4(normalOutput,1.0);\\n#endif\\n#ifdef POSITION\\ngl_FragData[POSITION_INDEX]=vec4(vPositionW,1.0);\\n#endif\\n#ifdef VELOCITY\\nvec2 a=(vCurrentPosition.xy/vCurrentPosition.w)*0.5+0.5;\\nvec2 b=(vPreviousPosition.xy/vPreviousPosition.w)*0.5+0.5;\\nvec2 velocity=abs(a-b);\\nvelocity=vec2(pow(velocity.x,1.0/3.0),pow(velocity.y,1.0/3.0))*sign(a-b)*0.5+0.5;\\ngl_FragData[VELOCITY_INDEX]=vec4(velocity,0.0,1.0);\\n#endif\\n#ifdef REFLECTIVITY\\n#ifdef HAS_SPECULAR\\n\\nvec4 reflectivity=texture2D(reflectivitySampler,vReflectivityUV);\\n#elif HAS_REFLECTIVITY\\n\\nvec4 reflectivity=vec4(texture2D(reflectivitySampler,vReflectivityUV).rgb,1.0);\\n#else\\nvec4 reflectivity=vec4(0.0,0.0,0.0,1.0);\\n#endif\\ngl_FragData[REFLECTIVITY_INDEX]=reflectivity;\\n#endif\\n}\";\n_effect.Effect.ShadersStore[name] = shader;\n/** @hidden */\n\nvar geometryPixelShader = {\n  name: name,\n  shader: shader\n};\nexports.geometryPixelShader = geometryPixelShader;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":18,"column":4}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":18,"column":8}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":18,"column":11}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":18,"column":32}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":19,"column":4}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":8,"column":10},"generated":{"line":19,"column":10}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":19,"column":13}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":19,"column":2145}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":20,"column":15}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":20,"column":27}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":90,"column":20},"generated":{"line":20,"column":28}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":20,"column":32}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":90,"column":28},"generated":{"line":20,"column":36}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":20,"column":42}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":91,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":7},"generated":{"line":23,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":11},"generated":{"line":23,"column":4}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":30},"generated":{"line":23,"column":23}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":33},"generated":{"line":23,"column":26}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":35},"generated":{"line":24,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":35},"generated":{"line":24,"column":2}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":39},"generated":{"line":24,"column":6}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":39},"generated":{"line":24,"column":8}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":33},"generated":{"line":24,"column":12}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":41},"generated":{"line":25,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":41},"generated":{"line":25,"column":2}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":47},"generated":{"line":25,"column":8}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":47},"generated":{"line":25,"column":10}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":33},"generated":{"line":26,"column":0}},{"source":"../../../sourceES6/core/Shaders/geometry.fragment.ts","name":null,"original":{"line":92,"column":7},"generated":{"line":26,"column":1}}],"sources":{"../../../sourceES6/core/Shaders/geometry.fragment.ts":"import { Effect } from \"../Materials/effect\";\nimport \"./ShadersInclude/mrtFragmentDeclaration\";\nimport \"./ShadersInclude/bumpFragmentMainFunctions\";\nimport \"./ShadersInclude/bumpFragmentFunctions\";\nimport \"./ShadersInclude/bumpFragment\";\n\nlet name = 'geometryPixelShader';\nlet shader = `#extension GL_EXT_draw_buffers : require\n#if defined(BUMP) || !defined(NORMAL)\n#extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\nprecision highp int;\n#ifdef BUMP\nvarying mat4 vWorldView;\nvarying vec3 vNormalW;\n#else\nvarying vec3 vNormalV;\n#endif\nvarying vec4 vViewPos;\n#if defined(POSITION) || defined(BUMP)\nvarying vec3 vPositionW;\n#endif\n#ifdef VELOCITY\nvarying vec4 vCurrentPosition;\nvarying vec4 vPreviousPosition;\n#endif\n#ifdef NEED_UV\nvarying vec2 vUV;\n#endif\n#ifdef BUMP\nuniform vec3 vBumpInfos;\nuniform vec2 vTangentSpaceParams;\n#endif\n#ifdef REFLECTIVITY\nvarying vec2 vReflectivityUV;\nuniform sampler2D reflectivitySampler;\n#endif\n#ifdef ALPHATEST\nuniform sampler2D diffuseSampler;\n#endif\n#include<mrtFragmentDeclaration>[RENDER_TARGET_COUNT]\n#include<bumpFragmentMainFunctions>\n#include<bumpFragmentFunctions>\nvoid main() {\n#ifdef ALPHATEST\nif (texture2D(diffuseSampler,vUV).a<0.4)\ndiscard;\n#endif\nvec3 normalOutput;\n#ifdef BUMP\nvec3 normalW=normalize(vNormalW);\n#include<bumpFragment>\nnormalOutput=normalize(vec3(vWorldView*vec4(normalW,0.0)));\n#else\nnormalOutput=normalize(vNormalV);\n#endif\n#ifdef PREPASS\n#ifdef PREPASS_DEPTHNORMAL\ngl_FragData[DEPTHNORMAL_INDEX]=vec4(vViewPos.z/vViewPos.w,normalOutput);\n#endif\n#else\ngl_FragData[0]=vec4(vViewPos.z/vViewPos.w,0.0,0.0,1.0);\ngl_FragData[1]=vec4(normalOutput,1.0);\n#endif\n#ifdef POSITION\ngl_FragData[POSITION_INDEX]=vec4(vPositionW,1.0);\n#endif\n#ifdef VELOCITY\nvec2 a=(vCurrentPosition.xy/vCurrentPosition.w)*0.5+0.5;\nvec2 b=(vPreviousPosition.xy/vPreviousPosition.w)*0.5+0.5;\nvec2 velocity=abs(a-b);\nvelocity=vec2(pow(velocity.x,1.0/3.0),pow(velocity.y,1.0/3.0))*sign(a-b)*0.5+0.5;\ngl_FragData[VELOCITY_INDEX]=vec4(velocity,0.0,1.0);\n#endif\n#ifdef REFLECTIVITY\n#ifdef HAS_SPECULAR\n\nvec4 reflectivity=texture2D(reflectivitySampler,vReflectivityUV);\n#elif HAS_REFLECTIVITY\n\nvec4 reflectivity=vec4(texture2D(reflectivitySampler,vReflectivityUV).rgb,1.0);\n#else\nvec4 reflectivity=vec4(0.0,0.0,0.0,1.0);\n#endif\ngl_FragData[REFLECTIVITY_INDEX]=reflectivity;\n#endif\n}`;\n\nEffect.ShadersStore[name] = shader;\n/** @hidden */\nexport var geometryPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"536beab2567d6d8138e173b1f98b8e53","cacheData":{"env":{}}}