{"id":"node_modules/@babylonjs/core/Shaders/colorCorrection.fragment.js","dependencies":[{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\colorCorrection.fragment.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\package.json","includedInParent":true,"mtime":1619046869845},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\.babelrc","includedInParent":true,"mtime":1618361427593},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../Materials/effect","loc":{"line":1,"column":23},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\colorCorrection.fragment.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Materials\\effect.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.colorCorrectionPixelShader = void 0;\n\nvar _effect = require(\"../Materials/effect\");\n\nvar name = 'colorCorrectionPixelShader';\nvar shader = \"\\nuniform sampler2D textureSampler;\\nuniform sampler2D colorTable;\\n\\nvarying vec2 vUV;\\n\\nconst float SLICE_COUNT=16.0;\\n\\nvec4 sampleAs3DTexture(sampler2D textureSampler,vec3 uv,float width) {\\nfloat sliceSize=1.0/width;\\nfloat slicePixelSize=sliceSize/width;\\nfloat sliceInnerSize=slicePixelSize*(width-1.0);\\nfloat zSlice0=min(floor(uv.z*width),width-1.0);\\nfloat zSlice1=min(zSlice0+1.0,width-1.0);\\nfloat xOffset=slicePixelSize*0.5+uv.x*sliceInnerSize;\\nfloat s0=xOffset+(zSlice0*sliceSize);\\nfloat s1=xOffset+(zSlice1*sliceSize);\\nvec4 slice0Color=texture2D(textureSampler,vec2(s0,uv.y));\\nvec4 slice1Color=texture2D(textureSampler,vec2(s1,uv.y));\\nfloat zOffset=mod(uv.z*width,1.0);\\nvec4 result=mix(slice0Color,slice1Color,zOffset);\\nreturn result;\\n}\\nvoid main(void)\\n{\\nvec4 screen_color=texture2D(textureSampler,vUV);\\ngl_FragColor=sampleAs3DTexture(colorTable,screen_color.rgb,SLICE_COUNT);\\n}\";\n_effect.Effect.ShadersStore[name] = shader;\n/** @hidden */\n\nvar colorCorrectionPixelShader = {\n  name: name,\n  shader: shader\n};\nexports.colorCorrectionPixelShader = colorCorrectionPixelShader;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":10,"column":4}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":3,"column":8},"generated":{"line":10,"column":8}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":10,"column":11}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":39}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":11,"column":4}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":11,"column":10}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":11,"column":13}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":922}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":7},"generated":{"line":12,"column":15}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":12,"column":27}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":20},"generated":{"line":12,"column":28}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":12,"column":32}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":28},"generated":{"line":12,"column":36}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":12,"column":42}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":15,"column":0}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":11},"generated":{"line":15,"column":4}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":37},"generated":{"line":15,"column":30}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":40},"generated":{"line":15,"column":33}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":42},"generated":{"line":16,"column":0}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":42},"generated":{"line":16,"column":2}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":46},"generated":{"line":16,"column":6}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":46},"generated":{"line":16,"column":8}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":40},"generated":{"line":16,"column":12}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":48},"generated":{"line":17,"column":0}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":48},"generated":{"line":17,"column":2}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":54},"generated":{"line":17,"column":8}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":54},"generated":{"line":17,"column":10}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":40},"generated":{"line":18,"column":0}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":18,"column":1}}],"sources":{"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts":"import { Effect } from \"../Materials/effect\";\n\nlet name = 'colorCorrectionPixelShader';\nlet shader = `\nuniform sampler2D textureSampler;\nuniform sampler2D colorTable;\n\nvarying vec2 vUV;\n\nconst float SLICE_COUNT=16.0;\n\nvec4 sampleAs3DTexture(sampler2D textureSampler,vec3 uv,float width) {\nfloat sliceSize=1.0/width;\nfloat slicePixelSize=sliceSize/width;\nfloat sliceInnerSize=slicePixelSize*(width-1.0);\nfloat zSlice0=min(floor(uv.z*width),width-1.0);\nfloat zSlice1=min(zSlice0+1.0,width-1.0);\nfloat xOffset=slicePixelSize*0.5+uv.x*sliceInnerSize;\nfloat s0=xOffset+(zSlice0*sliceSize);\nfloat s1=xOffset+(zSlice1*sliceSize);\nvec4 slice0Color=texture2D(textureSampler,vec2(s0,uv.y));\nvec4 slice1Color=texture2D(textureSampler,vec2(s1,uv.y));\nfloat zOffset=mod(uv.z*width,1.0);\nvec4 result=mix(slice0Color,slice1Color,zOffset);\nreturn result;\n}\nvoid main(void)\n{\nvec4 screen_color=texture2D(textureSampler,vUV);\ngl_FragColor=sampleAs3DTexture(colorTable,screen_color.rgb,SLICE_COUNT);\n}`;\n\nEffect.ShadersStore[name] = shader;\n/** @hidden */\nexport var colorCorrectionPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"8f34ae8e23614614ee1e082f665bdc39","cacheData":{"env":{}}}