{"id":"node_modules/@babylonjs/core/Shaders/spriteMap.fragment.js","dependencies":[{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\spriteMap.fragment.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\package.json","includedInParent":true,"mtime":1619046869845},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\.babelrc","includedInParent":true,"mtime":1618361427593},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../Materials/effect","loc":{"line":1,"column":23},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\spriteMap.fragment.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Materials\\effect.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.spriteMapPixelShader = void 0;\n\nvar _effect = require(\"../Materials/effect\");\n\nvar name = 'spriteMapPixelShader';\nvar shader = \"precision highp float;\\nvarying vec3 vPosition;\\nvarying vec2 vUV;\\nvarying vec2 tUV;\\nuniform float time;\\nuniform float spriteCount;\\nuniform sampler2D spriteSheet;\\nuniform vec2 spriteMapSize;\\nuniform vec2 outputSize;\\nuniform vec2 stageSize;\\nuniform sampler2D frameMap;\\nuniform sampler2D tileMaps[LAYERS];\\nuniform sampler2D animationMap;\\nuniform vec3 colorMul;\\nfloat mt;\\nconst float fdStep=1./4.;\\nconst float aFrameSteps=1./MAX_ANIMATION_FRAMES;\\nmat4 getFrameData(float frameID){\\nfloat fX=frameID/spriteCount;\\nreturn mat4(\\ntexture2D(frameMap,vec2(fX,0.),0.),\\ntexture2D(frameMap,vec2(fX,fdStep*1.),0.),\\ntexture2D(frameMap,vec2(fX,fdStep*2.),0.),\\nvec4(0.)\\n);\\n}\\nvoid main(){\\nvec4 color=vec4(0.);\\nvec2 tileUV=fract(tUV);\\n#ifdef FLIPU\\ntileUV.y=1.0-tileUV.y;\\n#endif\\nvec2 tileID=floor(tUV);\\nvec2 sheetUnits=1./spriteMapSize;\\nfloat spriteUnits=1./spriteCount;\\nvec2 stageUnits=1./stageSize;\\nfor(int i=0; i<LAYERS; i++) {\\nfloat frameID;\\n#define LAYER_ID_SWITCH\\nvec4 animationData=texture2D(animationMap,vec2((frameID+0.5)/spriteCount,0.),0.);\\nif(animationData.y>0.) {\\nmt=mod(time*animationData.z,1.0);\\nfor(float f=0.; f<MAX_ANIMATION_FRAMES; f++){\\nif(animationData.y>mt){\\nframeID=animationData.x;\\nbreak;\\n}\\nanimationData=texture2D(animationMap,vec2((frameID+0.5)/spriteCount,aFrameSteps*f),0.);\\n}\\n}\\n\\nmat4 frameData=getFrameData(frameID+0.5);\\nvec2 frameSize=(frameData[0].wz)/spriteMapSize;\\nvec2 offset=frameData[0].xy*sheetUnits;\\nvec2 ratio=frameData[2].xy/frameData[0].wz;\\n\\nif (frameData[2].z == 1.){\\ntileUV.xy=tileUV.yx;\\n}\\nif (i == 0){\\ncolor=texture2D(spriteSheet,tileUV*frameSize+offset);\\n} else {\\nvec4 nc=texture2D(spriteSheet,tileUV*frameSize+offset);\\nfloat alpha=min(color.a+nc.a,1.0);\\nvec3 mixed=mix(color.xyz,nc.xyz,nc.a);\\ncolor=vec4(mixed,alpha);\\n}\\n}\\ncolor.xyz*=colorMul;\\ngl_FragColor=color;\\n}\";\n_effect.Effect.ShadersStore[name] = shader;\n/** @hidden */\n\nvar spriteMapPixelShader = {\n  name: name,\n  shader: shader\n};\nexports.spriteMapPixelShader = spriteMapPixelShader;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":10,"column":4}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":3,"column":8},"generated":{"line":10,"column":8}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":10,"column":11}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":33}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":11,"column":4}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":11,"column":10}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":11,"column":13}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":1872}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":76,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":12,"column":15}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":76,"column":0},"generated":{"line":12,"column":27}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":76,"column":20},"generated":{"line":12,"column":28}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":76,"column":0},"generated":{"line":12,"column":32}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":76,"column":28},"generated":{"line":12,"column":36}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":76,"column":0},"generated":{"line":12,"column":42}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":7},"generated":{"line":15,"column":0}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":11},"generated":{"line":15,"column":4}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":31},"generated":{"line":15,"column":24}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":34},"generated":{"line":15,"column":27}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":36},"generated":{"line":16,"column":0}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":36},"generated":{"line":16,"column":2}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":40},"generated":{"line":16,"column":6}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":40},"generated":{"line":16,"column":8}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":34},"generated":{"line":16,"column":12}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":42},"generated":{"line":17,"column":0}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":42},"generated":{"line":17,"column":2}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":48},"generated":{"line":17,"column":8}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":48},"generated":{"line":17,"column":10}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":34},"generated":{"line":18,"column":0}},{"source":"../../../sourceES6/core/Shaders/spriteMap.fragment.ts","name":null,"original":{"line":78,"column":7},"generated":{"line":18,"column":1}}],"sources":{"../../../sourceES6/core/Shaders/spriteMap.fragment.ts":"import { Effect } from \"../Materials/effect\";\n\nlet name = 'spriteMapPixelShader';\nlet shader = `precision highp float;\nvarying vec3 vPosition;\nvarying vec2 vUV;\nvarying vec2 tUV;\nuniform float time;\nuniform float spriteCount;\nuniform sampler2D spriteSheet;\nuniform vec2 spriteMapSize;\nuniform vec2 outputSize;\nuniform vec2 stageSize;\nuniform sampler2D frameMap;\nuniform sampler2D tileMaps[LAYERS];\nuniform sampler2D animationMap;\nuniform vec3 colorMul;\nfloat mt;\nconst float fdStep=1./4.;\nconst float aFrameSteps=1./MAX_ANIMATION_FRAMES;\nmat4 getFrameData(float frameID){\nfloat fX=frameID/spriteCount;\nreturn mat4(\ntexture2D(frameMap,vec2(fX,0.),0.),\ntexture2D(frameMap,vec2(fX,fdStep*1.),0.),\ntexture2D(frameMap,vec2(fX,fdStep*2.),0.),\nvec4(0.)\n);\n}\nvoid main(){\nvec4 color=vec4(0.);\nvec2 tileUV=fract(tUV);\n#ifdef FLIPU\ntileUV.y=1.0-tileUV.y;\n#endif\nvec2 tileID=floor(tUV);\nvec2 sheetUnits=1./spriteMapSize;\nfloat spriteUnits=1./spriteCount;\nvec2 stageUnits=1./stageSize;\nfor(int i=0; i<LAYERS; i++) {\nfloat frameID;\n#define LAYER_ID_SWITCH\nvec4 animationData=texture2D(animationMap,vec2((frameID+0.5)/spriteCount,0.),0.);\nif(animationData.y>0.) {\nmt=mod(time*animationData.z,1.0);\nfor(float f=0.; f<MAX_ANIMATION_FRAMES; f++){\nif(animationData.y>mt){\nframeID=animationData.x;\nbreak;\n}\nanimationData=texture2D(animationMap,vec2((frameID+0.5)/spriteCount,aFrameSteps*f),0.);\n}\n}\n\nmat4 frameData=getFrameData(frameID+0.5);\nvec2 frameSize=(frameData[0].wz)/spriteMapSize;\nvec2 offset=frameData[0].xy*sheetUnits;\nvec2 ratio=frameData[2].xy/frameData[0].wz;\n\nif (frameData[2].z == 1.){\ntileUV.xy=tileUV.yx;\n}\nif (i == 0){\ncolor=texture2D(spriteSheet,tileUV*frameSize+offset);\n} else {\nvec4 nc=texture2D(spriteSheet,tileUV*frameSize+offset);\nfloat alpha=min(color.a+nc.a,1.0);\nvec3 mixed=mix(color.xyz,nc.xyz,nc.a);\ncolor=vec4(mixed,alpha);\n}\n}\ncolor.xyz*=colorMul;\ngl_FragColor=color;\n}`;\n\nEffect.ShadersStore[name] = shader;\n/** @hidden */\nexport var spriteMapPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"f5ffe954f875f37cbadaa614617cf8e8","cacheData":{"env":{}}}