{"id":"node_modules/@babel/helper-validator-option/lib/validator.js","dependencies":[{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\package.json","includedInParent":true,"mtime":1618428544734},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\.babelrc","includedInParent":true,"mtime":1618361427593},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babel\\helper-validator-option\\package.json","includedInParent":true,"mtime":456789000000},{"name":"./find-suggestion","loc":{"line":8,"column":30},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babel\\helper-validator-option\\lib\\validator.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babel\\helper-validator-option\\lib\\find-suggestion.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionValidator = void 0;\n\nvar _findSuggestion = require(\"./find-suggestion\");\n\nclass OptionValidator {\n  constructor(descriptor) {\n    this.descriptor = descriptor;\n  }\n\n  validateTopLevelOptions(options, TopLevelOptionShape) {\n    const validOptionNames = Object.keys(TopLevelOptionShape);\n\n    for (const option of Object.keys(options)) {\n      if (!validOptionNames.includes(option)) {\n        throw new Error(this.formatMessage(`'${option}' is not a valid top-level option.\n- Did you mean '${(0, _findSuggestion.findSuggestion)(option, validOptionNames)}'?`));\n      }\n    }\n  }\n\n  validateBooleanOption(name, value, defaultValue) {\n    if (value === undefined) {\n      return defaultValue;\n    } else {\n      this.invariant(typeof value === \"boolean\", `'${name}' option must be a boolean.`);\n    }\n\n    return value;\n  }\n\n  validateStringOption(name, value, defaultValue) {\n    if (value === undefined) {\n      return defaultValue;\n    } else {\n      this.invariant(typeof value === \"string\", `'${name}' option must be a string.`);\n    }\n\n    return value;\n  }\n\n  invariant(condition, message) {\n    if (!condition) {\n      throw new Error(this.formatMessage(message));\n    }\n  }\n\n  formatMessage(message) {\n    return `${this.descriptor}: ${message}`;\n  }\n\n}\n\nexports.OptionValidator = OptionValidator;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@babel/helper-validator-option/lib/validator.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}}],"sources":{"node_modules/@babel/helper-validator-option/lib/validator.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionValidator = void 0;\n\nvar _findSuggestion = require(\"./find-suggestion\");\n\nclass OptionValidator {\n  constructor(descriptor) {\n    this.descriptor = descriptor;\n  }\n\n  validateTopLevelOptions(options, TopLevelOptionShape) {\n    const validOptionNames = Object.keys(TopLevelOptionShape);\n\n    for (const option of Object.keys(options)) {\n      if (!validOptionNames.includes(option)) {\n        throw new Error(this.formatMessage(`'${option}' is not a valid top-level option.\n- Did you mean '${(0, _findSuggestion.findSuggestion)(option, validOptionNames)}'?`));\n      }\n    }\n  }\n\n  validateBooleanOption(name, value, defaultValue) {\n    if (value === undefined) {\n      return defaultValue;\n    } else {\n      this.invariant(typeof value === \"boolean\", `'${name}' option must be a boolean.`);\n    }\n\n    return value;\n  }\n\n  validateStringOption(name, value, defaultValue) {\n    if (value === undefined) {\n      return defaultValue;\n    } else {\n      this.invariant(typeof value === \"string\", `'${name}' option must be a string.`);\n    }\n\n    return value;\n  }\n\n  invariant(condition, message) {\n    if (!condition) {\n      throw new Error(this.formatMessage(message));\n    }\n  }\n\n  formatMessage(message) {\n    return `${this.descriptor}: ${message}`;\n  }\n\n}\n\nexports.OptionValidator = OptionValidator;"},"lineCount":58}},"error":null,"hash":"a01130ed74f49312406373bc5d446e32","cacheData":{"env":{}}}