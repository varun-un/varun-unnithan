{"id":"node_modules/@babylonjs/core/Shaders/minmaxRedux.fragment.js","dependencies":[{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\minmaxRedux.fragment.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\package.json","includedInParent":true,"mtime":1619046869845},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\.babelrc","includedInParent":true,"mtime":1618361427593},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../Materials/effect","loc":{"line":1,"column":23},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\minmaxRedux.fragment.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Materials\\effect.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.minmaxReduxPixelShader = void 0;\n\nvar _effect = require(\"../Materials/effect\");\n\nvar name = 'minmaxReduxPixelShader';\nvar shader = \"attribute vec2 vUV;\\nuniform sampler2D textureSampler;\\n#if defined(INITIAL)\\nuniform sampler2D sourceTexture;\\nuniform vec2 texSize;\\nvoid main(void)\\n{\\nivec2 coord=ivec2(vUV*(texSize-1.0));\\nfloat f1=texelFetch(sourceTexture,coord,0).r;\\nfloat f2=texelFetch(sourceTexture,coord+ivec2(1,0),0).r;\\nfloat f3=texelFetch(sourceTexture,coord+ivec2(1,1),0).r;\\nfloat f4=texelFetch(sourceTexture,coord+ivec2(0,1),0).r;\\nfloat minz=min(min(min(f1,f2),f3),f4);\\n#ifdef DEPTH_REDUX\\nfloat maxz=max(max(max(sign(1.0-f1)*f1,sign(1.0-f2)*f2),sign(1.0-f3)*f3),sign(1.0-f4)*f4);\\n#else\\nfloat maxz=max(max(max(f1,f2),f3),f4);\\n#endif\\nglFragColor=vec4(minz,maxz,0.,0.);\\n}\\n#elif defined(MAIN)\\nuniform vec2 texSize;\\nvoid main(void)\\n{\\nivec2 coord=ivec2(vUV*(texSize-1.0));\\nvec2 f1=texelFetch(textureSampler,coord,0).rg;\\nvec2 f2=texelFetch(textureSampler,coord+ivec2(1,0),0).rg;\\nvec2 f3=texelFetch(textureSampler,coord+ivec2(1,1),0).rg;\\nvec2 f4=texelFetch(textureSampler,coord+ivec2(0,1),0).rg;\\nfloat minz=min(min(min(f1.x,f2.x),f3.x),f4.x);\\nfloat maxz=max(max(max(f1.y,f2.y),f3.y),f4.y);\\nglFragColor=vec4(minz,maxz,0.,0.);\\n}\\n#elif defined(ONEBEFORELAST)\\nuniform ivec2 texSize;\\nvoid main(void)\\n{\\nivec2 coord=ivec2(vUV*vec2(texSize-1));\\nvec2 f1=texelFetch(textureSampler,coord % texSize,0).rg;\\nvec2 f2=texelFetch(textureSampler,(coord+ivec2(1,0)) % texSize,0).rg;\\nvec2 f3=texelFetch(textureSampler,(coord+ivec2(1,1)) % texSize,0).rg;\\nvec2 f4=texelFetch(textureSampler,(coord+ivec2(0,1)) % texSize,0).rg;\\nfloat minz=min(f1.x,f2.x);\\nfloat maxz=max(f1.y,f2.y);\\nglFragColor=vec4(minz,maxz,0.,0.);\\n}\\n#elif defined(LAST)\\nvoid main(void)\\n{\\ndiscard;\\nglFragColor=vec4(0.);\\n}\\n#endif\\n\";\n_effect.Effect.ShadersStore[name] = shader;\n/** @hidden */\n\nvar minmaxReduxPixelShader = {\n  name: name,\n  shader: shader\n};\nexports.minmaxReduxPixelShader = minmaxReduxPixelShader;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":10,"column":4}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":3,"column":8},"generated":{"line":10,"column":8}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":10,"column":11}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":35}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":11,"column":4}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":11,"column":10}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":11,"column":13}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":1705}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":12,"column":15}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":12,"column":27}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":59,"column":20},"generated":{"line":12,"column":28}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":12,"column":32}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":59,"column":28},"generated":{"line":12,"column":36}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":12,"column":42}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":7},"generated":{"line":15,"column":0}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":11},"generated":{"line":15,"column":4}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":33},"generated":{"line":15,"column":26}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":36},"generated":{"line":15,"column":29}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":38},"generated":{"line":16,"column":0}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":38},"generated":{"line":16,"column":2}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":42},"generated":{"line":16,"column":6}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":42},"generated":{"line":16,"column":8}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":36},"generated":{"line":16,"column":12}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":44},"generated":{"line":17,"column":0}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":44},"generated":{"line":17,"column":2}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":50},"generated":{"line":17,"column":8}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":50},"generated":{"line":17,"column":10}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":36},"generated":{"line":18,"column":0}},{"source":"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":7},"generated":{"line":18,"column":1}}],"sources":{"../../../sourceES6/core/Shaders/minmaxRedux.fragment.ts":"import { Effect } from \"../Materials/effect\";\n\nlet name = 'minmaxReduxPixelShader';\nlet shader = `attribute vec2 vUV;\nuniform sampler2D textureSampler;\n#if defined(INITIAL)\nuniform sampler2D sourceTexture;\nuniform vec2 texSize;\nvoid main(void)\n{\nivec2 coord=ivec2(vUV*(texSize-1.0));\nfloat f1=texelFetch(sourceTexture,coord,0).r;\nfloat f2=texelFetch(sourceTexture,coord+ivec2(1,0),0).r;\nfloat f3=texelFetch(sourceTexture,coord+ivec2(1,1),0).r;\nfloat f4=texelFetch(sourceTexture,coord+ivec2(0,1),0).r;\nfloat minz=min(min(min(f1,f2),f3),f4);\n#ifdef DEPTH_REDUX\nfloat maxz=max(max(max(sign(1.0-f1)*f1,sign(1.0-f2)*f2),sign(1.0-f3)*f3),sign(1.0-f4)*f4);\n#else\nfloat maxz=max(max(max(f1,f2),f3),f4);\n#endif\nglFragColor=vec4(minz,maxz,0.,0.);\n}\n#elif defined(MAIN)\nuniform vec2 texSize;\nvoid main(void)\n{\nivec2 coord=ivec2(vUV*(texSize-1.0));\nvec2 f1=texelFetch(textureSampler,coord,0).rg;\nvec2 f2=texelFetch(textureSampler,coord+ivec2(1,0),0).rg;\nvec2 f3=texelFetch(textureSampler,coord+ivec2(1,1),0).rg;\nvec2 f4=texelFetch(textureSampler,coord+ivec2(0,1),0).rg;\nfloat minz=min(min(min(f1.x,f2.x),f3.x),f4.x);\nfloat maxz=max(max(max(f1.y,f2.y),f3.y),f4.y);\nglFragColor=vec4(minz,maxz,0.,0.);\n}\n#elif defined(ONEBEFORELAST)\nuniform ivec2 texSize;\nvoid main(void)\n{\nivec2 coord=ivec2(vUV*vec2(texSize-1));\nvec2 f1=texelFetch(textureSampler,coord % texSize,0).rg;\nvec2 f2=texelFetch(textureSampler,(coord+ivec2(1,0)) % texSize,0).rg;\nvec2 f3=texelFetch(textureSampler,(coord+ivec2(1,1)) % texSize,0).rg;\nvec2 f4=texelFetch(textureSampler,(coord+ivec2(0,1)) % texSize,0).rg;\nfloat minz=min(f1.x,f2.x);\nfloat maxz=max(f1.y,f2.y);\nglFragColor=vec4(minz,maxz,0.,0.);\n}\n#elif defined(LAST)\nvoid main(void)\n{\ndiscard;\nglFragColor=vec4(0.);\n}\n#endif\n`;\n\nEffect.ShadersStore[name] = shader;\n/** @hidden */\nexport var minmaxReduxPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"1c448e30fb6d5bbe284badd0541baff9","cacheData":{"env":{}}}