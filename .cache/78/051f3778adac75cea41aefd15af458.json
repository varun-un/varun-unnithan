{"id":"node_modules/@babylonjs/core/Shaders/vrDistortionCorrection.fragment.js","dependencies":[{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\vrDistortionCorrection.fragment.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\package.json","includedInParent":true,"mtime":1618440501386},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\.babelrc","includedInParent":true,"mtime":1618361427593},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../Materials/effect","loc":{"line":1,"column":23},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\vrDistortionCorrection.fragment.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Materials\\effect.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vrDistortionCorrectionPixelShader = void 0;\n\nvar _effect = require(\"../Materials/effect\");\n\nvar name = 'vrDistortionCorrectionPixelShader';\nvar shader = \"\\nvarying vec2 vUV;\\nuniform sampler2D textureSampler;\\nuniform vec2 LensCenter;\\nuniform vec2 Scale;\\nuniform vec2 ScaleIn;\\nuniform vec4 HmdWarpParam;\\nvec2 HmdWarp(vec2 in01) {\\nvec2 theta=(in01-LensCenter)*ScaleIn;\\nfloat rSq=theta.x*theta.x+theta.y*theta.y;\\nvec2 rvector=theta*(HmdWarpParam.x+HmdWarpParam.y*rSq+HmdWarpParam.z*rSq*rSq+HmdWarpParam.w*rSq*rSq*rSq);\\nreturn LensCenter+Scale*rvector;\\n}\\nvoid main(void)\\n{\\nvec2 tc=HmdWarp(vUV);\\nif (tc.x <0.0 || tc.x>1.0 || tc.y<0.0 || tc.y>1.0)\\ngl_FragColor=vec4(0.0,0.0,0.0,0.0);\\nelse{\\ngl_FragColor=texture2D(textureSampler,tc);\\n}\\n}\";\n_effect.Effect.ShadersStore[name] = shader;\n/** @hidden */\n\nvar vrDistortionCorrectionPixelShader = {\n  name: name,\n  shader: shader\n};\nexports.vrDistortionCorrectionPixelShader = vrDistortionCorrectionPixelShader;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":10,"column":4}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":3,"column":8},"generated":{"line":10,"column":8}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":10,"column":11}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":46}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":11,"column":4}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":11,"column":10}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":11,"column":13}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":610}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":27,"column":7},"generated":{"line":12,"column":15}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":12,"column":27}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":27,"column":20},"generated":{"line":12,"column":28}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":12,"column":32}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":27,"column":28},"generated":{"line":12,"column":36}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":12,"column":42}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":7},"generated":{"line":15,"column":0}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":11},"generated":{"line":15,"column":4}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":44},"generated":{"line":15,"column":37}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":47},"generated":{"line":15,"column":40}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":49},"generated":{"line":16,"column":0}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":49},"generated":{"line":16,"column":2}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":53},"generated":{"line":16,"column":6}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":53},"generated":{"line":16,"column":8}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":47},"generated":{"line":16,"column":12}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":55},"generated":{"line":17,"column":0}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":55},"generated":{"line":17,"column":2}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":61},"generated":{"line":17,"column":8}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":61},"generated":{"line":17,"column":10}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":47},"generated":{"line":18,"column":0}},{"source":"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts","name":null,"original":{"line":29,"column":7},"generated":{"line":18,"column":1}}],"sources":{"../../../sourceES6/core/Shaders/vrDistortionCorrection.fragment.ts":"import { Effect } from \"../Materials/effect\";\n\nlet name = 'vrDistortionCorrectionPixelShader';\nlet shader = `\nvarying vec2 vUV;\nuniform sampler2D textureSampler;\nuniform vec2 LensCenter;\nuniform vec2 Scale;\nuniform vec2 ScaleIn;\nuniform vec4 HmdWarpParam;\nvec2 HmdWarp(vec2 in01) {\nvec2 theta=(in01-LensCenter)*ScaleIn;\nfloat rSq=theta.x*theta.x+theta.y*theta.y;\nvec2 rvector=theta*(HmdWarpParam.x+HmdWarpParam.y*rSq+HmdWarpParam.z*rSq*rSq+HmdWarpParam.w*rSq*rSq*rSq);\nreturn LensCenter+Scale*rvector;\n}\nvoid main(void)\n{\nvec2 tc=HmdWarp(vUV);\nif (tc.x <0.0 || tc.x>1.0 || tc.y<0.0 || tc.y>1.0)\ngl_FragColor=vec4(0.0,0.0,0.0,0.0);\nelse{\ngl_FragColor=texture2D(textureSampler,tc);\n}\n}`;\n\nEffect.ShadersStore[name] = shader;\n/** @hidden */\nexport var vrDistortionCorrectionPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"1c147e2e376e0842f418ab1f2a33a784","cacheData":{"env":{}}}