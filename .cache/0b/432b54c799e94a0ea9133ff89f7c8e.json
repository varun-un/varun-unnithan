{"id":"node_modules/@babylonjs/core/Shaders/ssao.fragment.js","dependencies":[{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\ssao.fragment.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\package.json","includedInParent":true,"mtime":1619016251814},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\.babelrc","includedInParent":true,"mtime":1618361427593},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../Materials/effect","loc":{"line":1,"column":23},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\ssao.fragment.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Materials\\effect.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ssaoPixelShader = void 0;\n\nvar _effect = require(\"../Materials/effect\");\n\nvar name = 'ssaoPixelShader';\nvar shader = \"\\nuniform sampler2D textureSampler;\\nvarying vec2 vUV;\\n#ifdef SSAO\\nuniform sampler2D randomSampler;\\nuniform float randTextureTiles;\\nuniform float samplesFactor;\\nuniform vec3 sampleSphere[SAMPLES];\\nuniform float totalStrength;\\nuniform float radius;\\nuniform float area;\\nuniform float fallOff;\\nuniform float base;\\nvec3 normalFromDepth(float depth,vec2 coords)\\n{\\nvec2 offset1=vec2(0.0,radius);\\nvec2 offset2=vec2(radius,0.0);\\nfloat depth1=texture2D(textureSampler,coords+offset1).r;\\nfloat depth2=texture2D(textureSampler,coords+offset2).r;\\nvec3 p1=vec3(offset1,depth1-depth);\\nvec3 p2=vec3(offset2,depth2-depth);\\nvec3 normal=cross(p1,p2);\\nnormal.z=-normal.z;\\nreturn normalize(normal);\\n}\\nvoid main()\\n{\\nvec3 random=normalize(texture2D(randomSampler,vUV*randTextureTiles).rgb);\\nfloat depth=texture2D(textureSampler,vUV).r;\\nvec3 position=vec3(vUV,depth);\\nvec3 normal=normalFromDepth(depth,vUV);\\nfloat radiusDepth=radius/depth;\\nfloat occlusion=0.0;\\nvec3 ray;\\nvec3 hemiRay;\\nfloat occlusionDepth;\\nfloat difference;\\nfor (int i=0; i<SAMPLES; i++)\\n{\\nray=radiusDepth*reflect(sampleSphere[i],random);\\nhemiRay=position+sign(dot(ray,normal))*ray;\\nocclusionDepth=texture2D(textureSampler,clamp(hemiRay.xy,vec2(0.001,0.001),vec2(0.999,0.999))).r;\\ndifference=depth-occlusionDepth;\\nocclusion+=step(fallOff,difference)*(1.0-smoothstep(fallOff,area,difference));\\n}\\nfloat ao=1.0-totalStrength*occlusion*samplesFactor;\\nfloat result=clamp(ao+base,0.0,1.0);\\ngl_FragColor.r=result;\\ngl_FragColor.g=result;\\ngl_FragColor.b=result;\\ngl_FragColor.a=1.0;\\n}\\n#endif\\n\";\n_effect.Effect.ShadersStore[name] = shader;\n/** @hidden */\n\nvar ssaoPixelShader = {\n  name: name,\n  shader: shader\n};\nexports.ssaoPixelShader = ssaoPixelShader;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":10,"column":4}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":3,"column":8},"generated":{"line":10,"column":8}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":10,"column":11}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":28}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":11,"column":4}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":11,"column":10}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":11,"column":13}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":1592}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":12,"column":15}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":12,"column":27}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":59,"column":20},"generated":{"line":12,"column":28}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":12,"column":32}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":59,"column":28},"generated":{"line":12,"column":36}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":12,"column":42}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":7},"generated":{"line":15,"column":0}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":11},"generated":{"line":15,"column":4}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":26},"generated":{"line":15,"column":19}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":29},"generated":{"line":15,"column":22}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":31},"generated":{"line":16,"column":0}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":31},"generated":{"line":16,"column":2}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":35},"generated":{"line":16,"column":6}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":35},"generated":{"line":16,"column":8}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":29},"generated":{"line":16,"column":12}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":37},"generated":{"line":17,"column":0}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":37},"generated":{"line":17,"column":2}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":43},"generated":{"line":17,"column":8}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":43},"generated":{"line":17,"column":10}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":29},"generated":{"line":18,"column":0}},{"source":"../../../sourceES6/core/Shaders/ssao.fragment.ts","name":null,"original":{"line":61,"column":7},"generated":{"line":18,"column":1}}],"sources":{"../../../sourceES6/core/Shaders/ssao.fragment.ts":"import { Effect } from \"../Materials/effect\";\n\nlet name = 'ssaoPixelShader';\nlet shader = `\nuniform sampler2D textureSampler;\nvarying vec2 vUV;\n#ifdef SSAO\nuniform sampler2D randomSampler;\nuniform float randTextureTiles;\nuniform float samplesFactor;\nuniform vec3 sampleSphere[SAMPLES];\nuniform float totalStrength;\nuniform float radius;\nuniform float area;\nuniform float fallOff;\nuniform float base;\nvec3 normalFromDepth(float depth,vec2 coords)\n{\nvec2 offset1=vec2(0.0,radius);\nvec2 offset2=vec2(radius,0.0);\nfloat depth1=texture2D(textureSampler,coords+offset1).r;\nfloat depth2=texture2D(textureSampler,coords+offset2).r;\nvec3 p1=vec3(offset1,depth1-depth);\nvec3 p2=vec3(offset2,depth2-depth);\nvec3 normal=cross(p1,p2);\nnormal.z=-normal.z;\nreturn normalize(normal);\n}\nvoid main()\n{\nvec3 random=normalize(texture2D(randomSampler,vUV*randTextureTiles).rgb);\nfloat depth=texture2D(textureSampler,vUV).r;\nvec3 position=vec3(vUV,depth);\nvec3 normal=normalFromDepth(depth,vUV);\nfloat radiusDepth=radius/depth;\nfloat occlusion=0.0;\nvec3 ray;\nvec3 hemiRay;\nfloat occlusionDepth;\nfloat difference;\nfor (int i=0; i<SAMPLES; i++)\n{\nray=radiusDepth*reflect(sampleSphere[i],random);\nhemiRay=position+sign(dot(ray,normal))*ray;\nocclusionDepth=texture2D(textureSampler,clamp(hemiRay.xy,vec2(0.001,0.001),vec2(0.999,0.999))).r;\ndifference=depth-occlusionDepth;\nocclusion+=step(fallOff,difference)*(1.0-smoothstep(fallOff,area,difference));\n}\nfloat ao=1.0-totalStrength*occlusion*samplesFactor;\nfloat result=clamp(ao+base,0.0,1.0);\ngl_FragColor.r=result;\ngl_FragColor.g=result;\ngl_FragColor.b=result;\ngl_FragColor.a=1.0;\n}\n#endif\n`;\n\nEffect.ShadersStore[name] = shader;\n/** @hidden */\nexport var ssaoPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"257671ccfc8474e7ffd2b774689ca0ad","cacheData":{"env":{}}}