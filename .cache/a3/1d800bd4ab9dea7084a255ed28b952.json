{"id":"node_modules/@babylonjs/core/Shaders/noise.fragment.js","dependencies":[{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\noise.fragment.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\package.json","includedInParent":true,"mtime":1618440501386},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\.babelrc","includedInParent":true,"mtime":1618361427593},{"name":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../Materials/effect","loc":{"line":1,"column":23},"parent":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Shaders\\noise.fragment.js","resolved":"C:\\Users\\varun\\Documents\\Visual Studio\\varun-unnithan\\node_modules\\@babylonjs\\core\\Materials\\effect.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.noisePixelShader = void 0;\n\nvar _effect = require(\"../Materials/effect\");\n\nvar name = 'noisePixelShader';\nvar shader = \"\\n\\nuniform float brightness;\\nuniform float persistence;\\nuniform float timeScale;\\n\\nvarying vec2 vUV;\\n\\nvec2 hash22(vec2 p)\\n{\\np=p*mat2(127.1,311.7,269.5,183.3);\\np=-1.0+2.0*fract(sin(p)*43758.5453123);\\nreturn sin(p*6.283+timeScale);\\n}\\nfloat interpolationNoise(vec2 p)\\n{\\nvec2 pi=floor(p);\\nvec2 pf=p-pi;\\nvec2 w=pf*pf*(3.-2.*pf);\\nfloat f00=dot(hash22(pi+vec2(.0,.0)),pf-vec2(.0,.0));\\nfloat f01=dot(hash22(pi+vec2(.0,1.)),pf-vec2(.0,1.));\\nfloat f10=dot(hash22(pi+vec2(1.0,0.)),pf-vec2(1.0,0.));\\nfloat f11=dot(hash22(pi+vec2(1.0,1.)),pf-vec2(1.0,1.));\\nfloat xm1=mix(f00,f10,w.x);\\nfloat xm2=mix(f01,f11,w.x);\\nfloat ym=mix(xm1,xm2,w.y);\\nreturn ym;\\n}\\nfloat perlinNoise2D(float x,float y)\\n{\\nfloat sum=0.0;\\nfloat frequency=0.0;\\nfloat amplitude=0.0;\\nfor(int i=0; i<OCTAVES; i++)\\n{\\nfrequency=pow(2.0,float(i));\\namplitude=pow(persistence,float(i));\\nsum=sum+interpolationNoise(vec2(x*frequency,y*frequency))*amplitude;\\n}\\nreturn sum;\\n}\\n\\nvoid main(void)\\n{\\nfloat x=abs(vUV.x);\\nfloat y=abs(vUV.y);\\nfloat noise=brightness+(1.0-brightness)*perlinNoise2D(x,y);\\ngl_FragColor=vec4(noise,noise,noise,1.0);\\n}\\n\";\n_effect.Effect.ShadersStore[name] = shader;\n/** @hidden */\n\nvar noisePixelShader = {\n  name: name,\n  shader: shader\n};\nexports.noisePixelShader = noisePixelShader;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":10,"column":4}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":3,"column":8},"generated":{"line":10,"column":8}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":10,"column":11}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":29}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":11,"column":4}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":11,"column":10}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":11,"column":13}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":1143}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":55,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":55,"column":7},"generated":{"line":12,"column":15}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":55,"column":0},"generated":{"line":12,"column":27}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":55,"column":20},"generated":{"line":12,"column":28}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":55,"column":0},"generated":{"line":12,"column":32}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":55,"column":28},"generated":{"line":12,"column":36}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":55,"column":0},"generated":{"line":12,"column":42}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":56,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":15,"column":0}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":11},"generated":{"line":15,"column":4}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":27},"generated":{"line":15,"column":20}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":30},"generated":{"line":15,"column":23}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":32},"generated":{"line":16,"column":0}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":32},"generated":{"line":16,"column":2}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":36},"generated":{"line":16,"column":6}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":36},"generated":{"line":16,"column":8}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":30},"generated":{"line":16,"column":12}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":38},"generated":{"line":17,"column":0}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":38},"generated":{"line":17,"column":2}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":44},"generated":{"line":17,"column":8}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":44},"generated":{"line":17,"column":10}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":30},"generated":{"line":18,"column":0}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":18,"column":1}}],"sources":{"../../../sourceES6/core/Shaders/noise.fragment.ts":"import { Effect } from \"../Materials/effect\";\n\nlet name = 'noisePixelShader';\nlet shader = `\n\nuniform float brightness;\nuniform float persistence;\nuniform float timeScale;\n\nvarying vec2 vUV;\n\nvec2 hash22(vec2 p)\n{\np=p*mat2(127.1,311.7,269.5,183.3);\np=-1.0+2.0*fract(sin(p)*43758.5453123);\nreturn sin(p*6.283+timeScale);\n}\nfloat interpolationNoise(vec2 p)\n{\nvec2 pi=floor(p);\nvec2 pf=p-pi;\nvec2 w=pf*pf*(3.-2.*pf);\nfloat f00=dot(hash22(pi+vec2(.0,.0)),pf-vec2(.0,.0));\nfloat f01=dot(hash22(pi+vec2(.0,1.)),pf-vec2(.0,1.));\nfloat f10=dot(hash22(pi+vec2(1.0,0.)),pf-vec2(1.0,0.));\nfloat f11=dot(hash22(pi+vec2(1.0,1.)),pf-vec2(1.0,1.));\nfloat xm1=mix(f00,f10,w.x);\nfloat xm2=mix(f01,f11,w.x);\nfloat ym=mix(xm1,xm2,w.y);\nreturn ym;\n}\nfloat perlinNoise2D(float x,float y)\n{\nfloat sum=0.0;\nfloat frequency=0.0;\nfloat amplitude=0.0;\nfor(int i=0; i<OCTAVES; i++)\n{\nfrequency=pow(2.0,float(i));\namplitude=pow(persistence,float(i));\nsum=sum+interpolationNoise(vec2(x*frequency,y*frequency))*amplitude;\n}\nreturn sum;\n}\n\nvoid main(void)\n{\nfloat x=abs(vUV.x);\nfloat y=abs(vUV.y);\nfloat noise=brightness+(1.0-brightness)*perlinNoise2D(x,y);\ngl_FragColor=vec4(noise,noise,noise,1.0);\n}\n`;\n\nEffect.ShadersStore[name] = shader;\n/** @hidden */\nexport var noisePixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"716909c6737e4da7c8df4a874b1e7220","cacheData":{"env":{}}}